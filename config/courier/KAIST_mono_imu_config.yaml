%YAML:1.0

#common parameters
#support: 1 imu 1 cam; 1 imu 2 cam: 2 cam; 
imu: 1         
num_of_cam: 1

imu_topic: "/zed2/zed_node/imu/data"
image_topic: "/zed2/zed_node/left/image_rect_color"
encoder_topic: "/odom"
output_path: "/home/wfram/vins_fusion_ws/src/VINS-Fusion/"

model_type: PINHOLE
camera_name: camera
image_width: 1280
image_height: 720

distortion_parameters:
   k1: 0.0
   k2: 0.0
   p1: 0.0
   p2: 0.0
projection_parameters:
   fx: 532.03125
   fy: 532.03125
   cx: 639.888671875
   cy: 356.16241455078125

# Extrinsic parameter between IMU and Camera.
estimate_extrinsic: 1   # 0  Have an accurate extrinsic parameters. We will trust the following imu^R_cam, imu^T_cam, don't change it.
                        # 1  Have an initial guess about extrinsic parameters. We will optimize around your initial guess.

#Rotation from camera frame to imu frame, imu^R_cam
extrinsicRotation_ic: !!opencv-matrix
   rows: 3
   cols: 3
   dt: d
   data: [0.03758758, 0.0190846, 0.99911108,
          -0.99906439, -0.02068303, 0.0379809,
          0.02138949, -0.99960392, 0.01828932]
#Translation from camera frame to imu frame, imu^T_cam
extrinsicTranslation_ic: !!opencv-matrix
   rows: 3
   cols: 1
   dt: d
   data: [-0.01088468, -0.00641469, 0.02625376]

#Multiple thread support
multiple_thread: 1

#feature traker paprameters
max_cnt: 200            # max feature number in feature tracking
min_dist: 30            # min distance between two features 
freq: 10                # frequence (Hz) of publish tracking result. At least 10Hz for good estimation. If set 0, the frequence will be same as raw image 
F_threshold: 1.0        # ransac threshold (pixel)
show_track: 1           # publish tracking image as topic
flow_back: 1            # perform forward and backward optical flow to improve feature tracking accuracy

#optimization parameters
max_solver_time: 0.15  # max solver itration time (ms), to guarantee real time
max_num_iterations: 15   # max solver itrations, to guarantee real time
keyframe_parallax: 5  # keyframe selection threshold (pixel)

#imu parameters       The more accurate parameters you provide, the better performance
acc_n: 0.04641977329563476          # accelerometer measurement noise standard deviation.
gyr_n: 0.013213877349668923         # gyroscope measurement noise standard deviation.
acc_w: 0.0019703618139556927        # accelerometer bias random work noise standard deviation.
gyr_w: 2.206282069791498e-05       # gyroscope bias random work noise standard deviation.
g_norm: 9.81007     # gravity magnitude

#unsynchronization parameters
estimate_td: 0                      # online estimate time offset between camera and imu
td: 0.0                             # initial value of time offset. unit: s. readed image clock + td = real image clock (IMU clock)

#loop closure parameters
loop_closure: 1                    # start loop closure
load_previous_pose_graph: 0        # load and reuse previous pose graph; load from 'pose_graph_save_path'
fast_relocalization: 1             # useful in real-time and large project
pose_graph_save_path: "/home/wfram/vins_fusion_ws/src/VINS-Fusion/" # save and load path

#rolling shutter parameters
rolling_shutter: 0                  # 0: global shutter camera, 1: rolling shutter camera
rolling_shutter_tr: 0               # unit: s. rolling shutter read out time per frame (from data sheet). 

#visualization parameters
save_image: 1                   # save image in pose graph for visualization prupose; you can close this function by setting 0 
visualize_imu_forward: 0        # output imu forward propogation to achieve low latency and high frequence results
visualize_camera_size: 0.4      # size of camera marker in RVIZ

#wheel encoder
is_encoder: 0 # is encoder
encode_resolution: 4096         # resolution of encoder
left_wheel_diameter: 0.623479   # [m]
right_wheel_diameter: 0.622806  # [m]
wheelbase: 1.52439             # [m] wheelbase, length between two wheels
enc_n: 0.2       # encoder readings noise standard deviation.

#Rotation from encoder frame to imu frame, imu^R_enc
extrinsicRotation_io: !!opencv-matrix
   rows: 3
   cols: 3
   dt: d
   data: [0.9984941, -0.0430893, -0.0339555,
          0.0438675, 0.9987841, 0.0225164,
          0.0329440, -0.0239720, 0.9991693]
#Translation from encoder frame to imu frame, imu^T_enc
extrinsicTranslation_io: !!opencv-matrix
   rows: 3
   cols: 1
   dt: d
   data: [-0.2383698, -0.0813120, -0.5778016]   # [0.07, 0., -1.7]
